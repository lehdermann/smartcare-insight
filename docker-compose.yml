services:
  # MQTT Broker (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2.0.15
    container_name: mosquitto
    ports:
      - "1883:1883"  # MQTT
      - "9001:9001"  # MQTT over WebSocket
      - "9003:9003"  # WebSocket adicional para compatibilidade
    volumes:
      - ./src/wearable-simulator/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
    networks:
      - healthcare-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m 'test' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  # InfluxDB (Time Series Database)
  influxdb:
    image: influxdb:2.6
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=healthcarepassword
      - DOCKER_INFLUXDB_INIT_ORG=healthcare
      - DOCKER_INFLUXDB_INIT_BUCKET=health_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=healthcareadmintoken
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    networks:
      - healthcare-network
    restart: unless-stopped

  # Wearable Simulator
  wearable-simulator:
    build:
      context: ./src/wearable-simulator
      dockerfile: Dockerfile
    container_name: wearable-simulator
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - MQTT_USER=healthcare
      - MQTT_PASSWORD=healthcarepassword
      - MQTT_TOPIC=wearables/data
      - SIMULATION_INTERVAL=5
      - NUM_PATIENTS=10
      - ABNORMAL_PROBABILITY=0.1
      - CONDITION=hypertension
      - SAMPLE_RATE=4
      - USE_CIRCADIAN_RHYTHMS=true
      - SIMULATE_MEALS=true
      - SIMULATE_SLEEP=true
      - MEAL_TIMES=7,12,19
      - SLEEP_START_HOUR=23
      - SLEEP_DURATION_HOURS=8
      - PATIENT_ID=patient-1
      - DEVICE_ID=wearable-1
      - BATCH_MODE=false
      #- BATCH_SIZE=1000
      #- BACKFILL_HOURS=24
    depends_on:
      mosquitto:
        condition: service_healthy
    networks:
      - healthcare-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    # Uncomment for debugging
    # ports:
    #   - "5678:5678"  # Debug port

  # Data Processor
  data-processor:
    build:
      context: ./src/data-processor
      dockerfile: Dockerfile
    container_name: data-processor
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - MQTT_USER=healthcare
      - MQTT_PASSWORD=healthcarepassword
      - MQTT_TOPIC=wearables/data
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=healthcareadmintoken
      - INFLUXDB_ORG=healthcare
      - INFLUXDB_BUCKET=health_metrics
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - healthcare-network
    restart: unless-stopped

  # Alert Manager
  alert-manager:
    build:
      context: ./src/alert-manager
      dockerfile: Dockerfile
    container_name: alert-manager
    ports:
      - "8000:8000"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=healthcareadmintoken
      - INFLUXDB_ORG=healthcare
      - INFLUXDB_BUCKET=health_metrics
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - MQTT_USER=healthcare
      - MQTT_PASSWORD=healthcarepassword
      - MQTT_TOPIC=alerts
      - CHECK_INTERVAL=10
      - PORT=8000
    depends_on:
      - influxdb
      - mosquitto
    networks:
      - healthcare-network
    restart: unless-stopped

  # LLM Service
  llm-service:
    build:
      context: ./src/llm-service
      dockerfile: Dockerfile
    container_name: llm-service
    ports:
      - "8002:8000"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=healthcareadmintoken
      - INFLUXDB_ORG=healthcare
      - INFLUXDB_BUCKET=health_metrics
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_NAME=gpt-3.5-turbo
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "300"]
    depends_on:
      - influxdb
    networks:
      - healthcare-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: '60s'
      timeout: '30s'
      retries: 5
      start_period: '120s'

  # API Server
  api-server:
    build:
      context: ./src/api-server
      dockerfile: Dockerfile
    container_name: api-server
    ports:
      - "8001:8002"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=healthcareadmintoken
      - INFLUXDB_ORG=healthcare
      - INFLUXDB_BUCKET=health_metrics
      - ALERT_MANAGER_URL=http://alert-manager:8000
      - LLM_SERVICE_URL=http://llm-service:8000
      - SECRET_KEY=healthcaresecretkey
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ./src/api-server:/app
    depends_on:
      - influxdb
      - alert-manager
      - llm-service
    networks:
      - healthcare-network
    restart: unless-stopped

  # Dashboard (Streamlit)
  dashboard:
    build:
      context: ./src/dashboard
      dockerfile: Dockerfile
    container_name: dashboard
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api-server:8002
    volumes:
      - ./src/dashboard:/app
    depends_on:
      - api-server
    networks:
      - healthcare-network
    restart: unless-stopped

  # MQTT Explorer (Interface Web)
  mqtt-explorer:
    image: b4bz/homer:latest
    container_name: mqtt-explorer
    ports:
      - "4000:80"
    environment:
      INITIAL_CONFIG: |
        {
          "mqtt_connection": {
            "name": "MQTT Broker",
            "server": "ws://mosquitto:9001"
          }
        }
    depends_on:
      - mosquitto
    networks:
      - healthcare-network
    restart: unless-stopped

networks:
  healthcare-network:
    driver: bridge

volumes:
  mosquitto-data:
  mosquitto-log:
  influxdb-data:
  influxdb-config:
